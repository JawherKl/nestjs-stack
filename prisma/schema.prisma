datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String     @id @default(uuid())
  name        String
  email       String     @unique
  projects    Project[]
  projectPermissions ProjectPermission[]
  resourcePermissions ResourcePermission[]
  apiKeys     ApiKey[]
}
model Project {
  id          String     @id @default(uuid())
  name        String
  description String?
  isArchived  Boolean    @default(false)
  userId      String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  user        User       @relation(fields: [userId], references: [id])
  resources   Resource[]
  projectPermissions ProjectPermission[]
  apiKeys     ApiKey[]
}

model Resource {
  id          String   @id @default(uuid())
  name        String
  type        String
  value       String
  projectId   String
  isArchived  Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  project     Project @relation(fields: [projectId], references: [id])
  resourcePermissions ResourcePermission[]
}

model AuditLog {
  id          String   @id @default(uuid())
  action      String
  entity      String
  entityId    String
  userId      String
  timestamp   DateTime @default(now())
  details     Json?
}

model ProjectPermission {
  id         String   @id @default(uuid())
  userId     String
  projectId  String
  permission String   // 'read', 'write', 'admin'
  user       User     @relation(fields: [userId], references: [id])
  project    Project  @relation(fields: [projectId], references: [id])
  @@unique([userId, projectId])
}

model ResourcePermission {
  id          String   @id @default(uuid())
  userId      String
  resourceId  String
  permission  String   // 'read', 'write', 'admin'
  user        User     @relation(fields: [userId], references: [id])
  resource    Resource @relation(fields: [resourceId], references: [id])
  @@unique([userId, resourceId])
}

model ApiKey {
  id         String   @id @default(uuid())
  key        String   @unique
  projectId  String
  userId     String
  createdAt  DateTime @default(now())
  revoked    Boolean  @default(false)
  project    Project  @relation(fields: [projectId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
}